{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","class","src","monster","id","alt","name","email","CardList","className","monsters","map","SearchBox","placeholer","handleChange","type","placeholder","onChange","App","e","setState","searchField","target","value","state","fetch","then","res","json","users","this","filteredMonster","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2TAIaA,EAAO,SAACC,GACjB,OACI,sBAAKC,MAAM,iBAAX,UACK,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,YAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCLlBC,G,MAAW,SAACR,GACrB,OACI,qBAAKS,UAAU,YAAf,SACKT,EAAMU,SAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAAMA,QAASA,WCLtBS,G,MAAY,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,aACpC,OAAO,uBAAOC,KAAK,SAASN,UAAU,SAASO,YAAaH,EAAYI,SAAUH,MCwCvEI,G,wDApCb,aAAe,IAAD,8BACZ,gBAQFJ,aAAe,SAAAK,GAAC,OAAI,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SANxD,EAAKC,MAAQ,CACXd,SAAU,GACVW,YAAa,IALH,E,qDAWd,WAAoB,IAAD,OACjBI,MAAM,8CACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEV,SAAUmB,S,oBAG3C,WAAU,IAAD,EAE2BC,KAAKN,MAA/Bd,EAFD,EAECA,SAAUW,EAFX,EAEWA,YACZU,EAAkBrB,EAASsB,QAAO,SAAA7B,GAAO,OAAIA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYc,wBAEnG,OACE,sBAAK1B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEI,WAAW,mBACXC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUJ,SAAUqB,W,GA/BVK,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.a076cf5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport {} from './card.style.css';\r\n\r\n\r\nexport const Card = (props) =>{\r\n    return(\r\n        <div class=\"card-container\">\r\n             <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"monster\" />\r\n             <h1>{props.monster.name}</h1>\r\n             <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Card } from './../card/card.component';\r\nimport {} from './card-list.styles.css';\r\n\r\nexport const CardList = (props) => {\r\n    return (\r\n        <div className=\"card-list\"> \r\n            {props.monsters.map(monster => (\r\n                    <Card monster={monster} />\r\n                )) \r\n            }\r\n        </div>\r\n    )\r\n}; ","import React from 'react';\r\nimport {} from './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholer, handleChange }) =>{\r\n    return <input type=\"search\" className=\"search\" placeholder={placeholer} onChange={handleChange} />\r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n  \n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleChange = e => this.setState({ searchField: e.target.value });\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(res => res.json())\n    .then(users => this.setState({ monsters: users }));\n  }\n\n  render() {\n\n    const { monsters, searchField } = this.state;\n    const filteredMonster = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monster Rolodex</h1>\n        <SearchBox \n          placeholer=\"SearchMonster...\"\n          handleChange={this.handleChange}\n        /> \n        <CardList monsters={filteredMonster} />\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}